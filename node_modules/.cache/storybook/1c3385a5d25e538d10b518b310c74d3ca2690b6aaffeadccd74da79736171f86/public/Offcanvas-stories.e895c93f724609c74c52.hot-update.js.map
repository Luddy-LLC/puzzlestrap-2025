{"version":3,"file":"Offcanvas-stories.e895c93f724609c74c52.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;;;AAEA;AACA;AAAA;;;AAEA;AACA;AAAA;;;AAEA;AACA;AAAA;;;AAEA","sources":["webpack://puzzlestrap-2025/./stories/Offcanvas.stories.js"],"sourcesContent":["import { html } from 'lit';\n\n/**\n * An alert box to notify the user of a result of their action.\n * ## Usage Notes\n * Be careful when using alert. `info` alerts are \"respectful\" to screen readers and can be used for purely informational contexts. `success`,`warning`, and `failure` alerts use `role=\"alert\"` and, when visible, will interupt a screen reader and jump the user to the alert. These should only be used when necessary to inform the user of a successful or failed, time-sensitive action. [Overuse of this role could be harmful. Learn more at MDN.](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/alert_role)\n */\n\nexport default {\n  title: 'Mega Puzzle/Offcanvas',\n  component: 'Offcanvas',\n  id: 'oc',\n  argTypes: {\n    type: { control: { type: \"select\"}, options: [\"info\", \"success\", \"warning\", \"failure\"] }\n  },\n  args: { id: \"m\", title: \"Example modal\", icon: \"mp-sparkle\", footer: \"This is a footer\"},\n  render: ({id, title, icon, footer}) => {\n    return html`\n    <button popovertarget=\"${id}\">Open Custom Offcanvas</button>\n      <mp-offcanvas oc-id=\"${id}\" title=\"${title}\" icon=\"${icon}\" footer=\"${footer}\"\n        full-height=\"\">\n      </mp-offcanvas>`\n  }\n};\n\nexport const hints = {render: html`\n  <button popovertarget=\"hints-menu\">Hints</button>\n  <mp-hints></mp-hints>`};\nexport const archive = {render: html`\n  <button popovertarget=\"archive-menu\">Archive</button>\n  <mp-archive></mp-archive>`};\nexport const solve = {render: html`\n  <button popovertarget=\"solve-menu\">Solve</button>\n  <mp-solve></mp-solve>`};\nexport const music = {render: html`\n  <button popovertarget=\"music-menu\">Music</button>\n  <mp-music></mp-music>`};\n"],"names":[],"sourceRoot":""}