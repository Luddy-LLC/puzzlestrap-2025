{"version":3,"file":"main.a4ba95cdf1877aff3eb7.hot-update.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA","sources":["webpack://puzzlestrap-2025/./components.js"],"sourcesContent":["function camelize(str) {\n    return str.replaceAll(\"-\", \"\").replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word, index) {\n      return index === 0 ? word.toLowerCase() : word.toUpperCase();\n    }).replace(/\\s+/g, '');\n}\n\n// Navigation Bar\nclass Nav extends HTMLElement {\n    static observedAttributes = [\"title\", \"is-solveable\"];\n    constructor() { super() }\n\n    attributeChangedCallback(name, oldValue, newValue) { render() }\n\n    render() {\n        const shadowRoot = this.attachShadow({mode: 'open'});\n        const c = ``;\n    shadowRoot.innerHTML = c;\n    }\n\n    connectedCallback() { this.render(); }\n    attributeChangedCallback() { this.render(); }\n}\n\ncustomElements.define(\"mp-nav\", Nav);\n\n\n// Navigation Bar\nclass Hints extends HTMLElement {\n    constructor() {\n        super();\n        const shadowRoot = this.attachShadow({mode: 'open'});\n        this.value = this.hasAttribute('value');\n    }\n\n    render() {\n        content = `\n        <style>\n                    .dialog-menu,\n            .dialog-menu[open].dialog-menu--closing{\n            position: fixed;\n            transition: .3s;\n            margin: 0;\n            margin-left: auto;\n            min-height: 100vh;\n            width: 400px;\n            max-width: 80%;\n            transform: translateX(100%);\n            }\n            .dialog-menu[open] {\n            display: flex;\n            margin: 0;\n            margin-left: auto;\n            flex-direction: column;\n            transform: translateX(0);\n            transition: .3s;\n            }\n\n            .close-dialog {\n            margin-left: auto;\n            \n\n            .dialog-menu {\n            background-color: darkolivegreen;\n            }\n\n            ul {\n                    list-style: none;\n                    margin: 0;\n                    padding: 0;\n                    }\n                    li {\n                    margin-top: var(--spacing);\n                    }\n                    li + li {\n                    border-top: 1px solid white;\n                    }\n                    a {\n                    display: block;\n                    padding-block: 1rem; \n                    text-decoration: none;\n                    color: white;\n                    }\n\n        </style>\n\n        <button class=\"open-dialog\">Open Hint</button>\n        <dialog class=\"dialog-menu\">\n            <button class=\"close-dialog\">Close Dialog</button>\n                <nav>\n                    <ul>\n                    <li><a href=\"https://example.com/about\">About </a></li>\n                    <li><a href=\"https://example.com/blog\">Blog</a></li>\n                    <li><a href=\"https://example.com/services\">Services</a></li>\n                    <li><a href=\"https://example.com/contact\">Contact</a></li>\n                    </ul>\n                </nav>\n        </dialog>\n\n        <script>\n        const dialogMenu = document.querySelector(\".dialog-menu\");\n        const dialogMenuCloseButton = document.querySelector(\".close-dialog\");\n        const dialogMenuOpenButton = document.querySelector(\".open-dialog\");\n\n        dialogMenuOpenButton.addEventListener(\"click\", () => {\n        dialogMenu.style.display = \"flex\";\n        setTimeout(() => {\n            dialogMenu.showModal();\n        }, 100);\n        });\n\n\n        dialogMenuCloseButton.addEventListener('click', () => {\n        dialogMenu.classList.add(\"dialog-menu--closing\");\n        setTimeout(() => {\n            dialogMenu.close();\n            dialogMenu.style.display = \"none\";\n            dialogMenu.classList.remove(\"dialog-menu--closing\");\n        }, 100);\n        });\n\n        </script>\n        `\n        shadowRoot.appendChild(content); \n    }\n\n    connectedCallback() { this.render(); }\n    attributeChangedCallback() { this.render(); }\n}\n\ncustomElements.define(\"mp-hints\", Hints);"],"names":[],"sourceRoot":""}