"use strict";
self["webpackHotUpdatepuzzlestrap_2025"]("Offcanvas-stories",{

/***/ "./stories/Offcanvas.stories.js":
/*!**************************************!*\
  !*** ./stories/Offcanvas.stories.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   archive: () => (/* binding */ archive),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   hints: () => (/* binding */ hints),
/* harmony export */   music: () => (/* binding */ music),
/* harmony export */   solve: () => (/* binding */ solve)
/* harmony export */ });
/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ "./node_modules/lit/index.js");

/**
 * An alert box to notify the user of a result of their action.
 * ## Usage Notes
 * Be careful when using alert. `info` alerts are "respectful" to screen readers and can be used for purely informational contexts. `success`,`warning`, and `failure` alerts use `role="alert"` and, when visible, will interupt a screen reader and jump the user to the alert. These should only be used when necessary to inform the user of a successful or failed, time-sensitive action. [Overuse of this role could be harmful. Learn more at MDN.](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/alert_role)
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Mega Puzzle/Offcanvas',
  component: 'Offcanvas',
  id: 'oc',
  argTypes: {
    type: {
      control: {
        type: "select"
      },
      options: ["info", "success", "warning", "failure"]
    }
  },
  args: {
    id: "m",
    title: "Example modal",
    icon: "mp-sparkle",
    footer: "This is a footer"
  },
  render: ({
    id,
    title,
    icon,
    footer
  }) => {
    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`
    <button popovertarget="${id}">Open Custom Offcanvas</button>
      <mp-offcanvas oc-id="${id}" title="${title}" icon="${icon}" footer="${footer}"
        full-height="">
      </mp-offcanvas>`;
  },
  parameters: {
    docs: {
      description: {
        component: "An alert box to notify the user of a result of their action.\n## Usage Notes\nBe careful when using alert. `info` alerts are \"respectful\" to screen readers and can be used for purely informational contexts. `success`,`warning`, and `failure` alerts use `role=\"alert\"` and, when visible, will interupt a screen reader and jump the user to the alert. These should only be used when necessary to inform the user of a successful or failed, time-sensitive action. [Overuse of this role could be harmful. Learn more at MDN.](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/alert_role)"
      }
    }
  }
});
const hints = {
  render: (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`
  <button popovertarget="hints-menu">Hints</button>
  <mp-hints></mp-hints>`
};
const archive = {
  render: (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`
  <button popovertarget="archive-menu">Archive</button>
  <mp-archive></mp-archive>`
};
const solve = {
  render: (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`
  <button popovertarget="solve-menu">Solve</button>
  <mp-solve></mp-solve>`
};
const music = {
  render: (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`
  <button popovertarget="music-menu">Music</button>
  <mp-music></mp-music>`
};
;
const __namedExportsOrder = ["hints", "archive", "solve", "music"];
hints.parameters = {
  ...hints.parameters,
  docs: {
    ...hints.parameters?.docs,
    source: {
      originalSource: "{\n  render: html`\n  <button popovertarget=\"hints-menu\">Hints</button>\n  <mp-hints></mp-hints>`\n}",
      ...hints.parameters?.docs?.source
    }
  }
};
archive.parameters = {
  ...archive.parameters,
  docs: {
    ...archive.parameters?.docs,
    source: {
      originalSource: "{\n  render: html`\n  <button popovertarget=\"archive-menu\">Archive</button>\n  <mp-archive></mp-archive>`\n}",
      ...archive.parameters?.docs?.source
    }
  }
};
solve.parameters = {
  ...solve.parameters,
  docs: {
    ...solve.parameters?.docs,
    source: {
      originalSource: "{\n  render: html`\n  <button popovertarget=\"solve-menu\">Solve</button>\n  <mp-solve></mp-solve>`\n}",
      ...solve.parameters?.docs?.source
    }
  }
};
music.parameters = {
  ...music.parameters,
  docs: {
    ...music.parameters?.docs,
    source: {
      originalSource: "{\n  render: html`\n  <button popovertarget=\"music-menu\">Music</button>\n  <mp-music></mp-music>`\n}",
      ...music.parameters?.docs?.source
    }
  }
};

/***/ })

});
//# sourceMappingURL=Offcanvas-stories.e895c93f724609c74c52.hot-update.js.map